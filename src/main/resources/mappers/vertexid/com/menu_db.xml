<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="menu">	
	<select id="getSQL_menuList" resultType="string" parameterType="hashmap" >
	    select fn_get_menu_list
			  (#{m_no}, 
			   #{cm_code}, 
			  <if test="!m_use_yn.equals('')">
      				#{m_use_yn}
     		  </if>
			  )
	</select>
	
	<select id="menuList" resultType="com.vertexid.vo.MenuVo" parameterType="hashmap" >
		select  DISTINCTROW  A.aa, A.m_no, A.m_nm, A.m_url, A.m_order, A.m_depth , A.m_depth as depth FROM( 
				${isql_string} 
				)AS A
		JOIN tb_menu_auth MA ON A.m_no = MA.m_no AND MA.ma_visible = 'Y' 
		JOIN tb_menu_auth_group_emp MAGE ON MA.ma_group_seq = MAGE.ma_group_seq
		 AND  MAGE.em_no = #{login_no}
	   GROUP by A.aa, a.m_no
  	   ORDER BY A.aa , A.m_depth
	</select>
	
	<select id="selectMenuList" parameterType="hashmap" resultType="com.vertexid.vo.MenuVo" >
	    SELECT  M_NO,
			         M_NM,
			         m_nm,
			         M_URL,
			         M_NOTE,
			         M_PARENT_NO,
			         M_USE_YN,
			         M_ORDER,
			         M_IN_DATE,
			         M_UP_DATE,
			         M_IN_ID,
			         M_UP_ID,
			         m_depth
		  FROM tb_menu
	     WHERE m_no != 1
	       AND m_nm != 'HOME'
	       AND (m_no = IF(#{m_no}='', m_no, #{m_no}) 
	      		or M_PARENT_NO = IF(#{m_no}='', M_PARENT_NO, #{m_no})
	      	)
	      AND m_depth = IF(#{m_no}='', '1', m_depth)
	      AND if(m_common_yn='N', m_cm_code, 1) = if(m_common_yn='N', #{cm_code}, 1)
		 ORDER BY m_depth, M_ORDER	
	</select>    
	
	<select id="selectMenuRow" parameterType="string" resultType="com.vertexid.vo.MenuVo" >
	        SELECT M_NO,
		           M_NM,
		           M_URL,
		           M_NOTE,
		           M_PARENT_NO,
		           IFNULL((SELECT M_NM FROM tb_menu B WHERE B.M_NO=A.M_PARENT_NO), '최상위 메뉴') AS M_PARENT_NAME,
		           M_USE_YN,
		           M_ORDER,
		           M_IN_DATE,
		           M_UP_DATE,
		           M_IN_ID,
		           M_UP_ID,
		           M_DEPTH,
		           (SELECT B.M_PARENT_NO FROM tb_menu B WHERE B.M_NO = A.M_PARENT_NO) AS UP_DEPTH_CODE  
	    FROM tb_menu A
	    WHERE M_NO = #{m_no}
  	</select>
  	
  	<select id="selectDepthList" parameterType="hashmap" resultType="com.vertexid.vo.MenuVo" >
	       SELECT M_NO,
				   M_NM
			FROM tb_menu
		   WHERE 1=1
		   <if test="m_depth != 1">
		     AND M_PARENT_NO = #{m_no}
		   </if>
			 AND m_depth=#{m_depth}
			 AND m_use_yn ='Y'
		ORDER BY m_order
  	</select>
  	
  	<select id="getParentInfo" parameterType="string" resultType="com.vertexid.vo.MenuVo" >
		SELECT M_PARENT_NO,
		        (SELECT M_NM FROM tb_menu B WHERE B.M_NO=A.M_PARENT_NO) AS M_PARENT_NAME
		  FROM tb_menu A
		  WHERE M_NO = #{m_no}
		  LIMIT 1
  	</select>
  	
  	<select id="selectFirstTreeMenu" resultType="string" >
		SELECT m_no
		  FROM tb_menu
	     WHERE m_no != 1
	       AND m_nm != 'HOME'
         LIMIT 1
	</select>
	
	<select id="selectMenuParentList" resultType="com.vertexid.vo.MenuVo" >
	       SELECT M_NO, M_NM
			FROM tb_menu
			WHERE M_NO &lt;&gt; 1
			AND M_PARENT_NO IS NULL 
			ORDER BY M_ORDER
  	</select>
  	
  	<select id="selectMenuChildList" resultType="com.vertexid.vo.MenuVo" >
	       SELECT m_no,
				   m_nm
			FROM tb_menu a
			 WHERE  m_parent_no = #{m_no}
			   and (select count(*) from tb_menu b where b.m_parent_no = a.m_no) > 0 
			ORDER bY m_order
  	</select>

	<update id="SP_SAVE_MENU_TO_ORGNZ" statementType="CALLABLE" parameterType="com.vertexid.vo.MenuVo">
        {call SP_SAVE_MENU_TO_ORGNZ(
			#{flag        , mode=IN, jdbcType=VARCHAR, javaType=string}
		  , #{cm_code    	, mode=IN, jdbcType=VARCHAR, javaType=string}
		  , #{m_no        , mode=IN, jdbcType=VARCHAR, javaType=string}
		  , #{m_nm        , mode=IN, jdbcType=VARCHAR, javaType=string}
		  , #{m_parent_no , mode=IN, jdbcType=VARCHAR, javaType=string}
		  , #{m_order     , mode=IN, jdbcType=VARCHAR, javaType=string}
		  , #{m_url       , mode=IN, jdbcType=VARCHAR, javaType=string}
		  , #{m_note      , mode=IN, jdbcType=VARCHAR, javaType=string}
		  , #{m_use_yn    , mode=IN, jdbcType=VARCHAR, javaType=string}
		  , #{m_depth     , mode=IN, jdbcType=VARCHAR, javaType=string}
		  , #{m_in_id         , mode=IN, jdbcType=VARCHAR, javaType=string} 
		  , #{res_code      , mode=OUT, jdbcType=VARCHAR, javaType=string}
		  , #{res_msg       , mode=OUT, jdbcType=VARCHAR, javaType=string}
        )}
    </update>
    
  	<update id="updateMenu" parameterType="hashmap">
        UPDATE
            tb_menu
        SET
            m_nm=#{m_nm}
            ,m_parent_no=#{m_parent_no}
            ,m_order=#{m_order}
            ,m_url=#{m_url}
            ,m_note=#{m_note}
            ,m_use_yn=#{m_use_yn}
            ,m_up_id=#{m_up_id}
            ,m_up_date= DATE_FORMAT(NOW(), '%Y%m%d%H%i%s')
            ,m_depth=#{m_depth} 
        WHERE
            m_no = #{m_no}
    </update>
    
    <insert id="insertMenu" parameterType="hashmap">
        INSERT INTO tb_menu
       		(	m_no 
        		,m_nm 
        		,m_parent_no 
        		,m_order 
        		,m_url 
        		,m_note 
        		,m_use_yn 
        		,m_in_id 
        		,m_in_date
        		,m_up_id
        		,m_up_date
        		,m_depth
       		)
       	VALUES
       		(
        		(SELECT IFNULL(MAX(M_NO)+1, 1) from tb_menu;)
        		,#{m_nm} 
        		,#{m_parent_no} 
        		,#{m_order} 
        		,#{m_url}
        		,#{m_note} 
        		,#{m_use_yn} 
        		,#{m_in_id} 
        		,DATE_FORMAT(NOW(), '%Y%m%d%H%i%s')
        		,#{m_in_id} 
        		,DATE_FORMAT(NOW(), '%Y%m%d%H%i%s')
        		,#{m_depth} 
        		
       		)
    </insert>
	
	<select id="selectMenuInit" parameterType="map" resultType="com.vertexid.vo.MenuVo" >
	        SELECT A.M_NO,
		           M_NM,
		           M_URL,
		           M_NOTE,
		           M_PARENT_NO,
		           IFNULL((SELECT M_NM FROM tb_menu B WHERE B.M_NO=A.M_PARENT_NO), '최상위 메뉴') AS M_PARENT_NAME,  
		           M_USE_YN,
		           M_ORDER,
		           M_IN_DATE,
		           M_UP_DATE,
		           M_IN_ID,
		           M_UP_ID,
		           M_DEPTH,
		           (SELECT B.M_PARENT_NO FROM tb_menu B WHERE B.M_NO = A.M_PARENT_NO) AS UP_DEPTH_CODE  
	    FROM tb_menu A  
       JOIN tb_menu_auth MA    
      ON A.m_no = MA.m_no 
       AND MA.ma_visible = 'Y' 
       JOIN tb_menu_auth_group_emp MAGE    
      ON MA.ma_group_seq = MAGE.ma_group_seq
      AND MAGE.em_no =#{login_no}
	    WHERE 1=1
          AND A.m_use_yn = 'Y' 
          AND if(A.m_common_yn='N', m_cm_code, 1) = if(A.m_common_yn='N', #{cm_code}, 1)
        <!--   AND (A.m_no = #{m_no} OR A.m_parent_no = #{m_no} OR m_parent_no IN (SELECT m_no FROM tb_menu WHERE m_parent_no = #{m_no}) ) -->
        ORDER by A.m_depth , A.m_order
  	</select>
  	
  	<select id="selectTopInit" parameterType="map" resultType="com.vertexid.vo.MenuVo" >
	       SELECT A.M_NO,
		           M_NM,
		           M_URL,
		           M_NOTE,
		           M_PARENT_NO,
		           IFNULL((SELECT M_NM FROM tb_menu B WHERE B.M_NO=A.M_PARENT_NO), '최상위 메뉴') AS M_PARENT_NAME,  
		           M_USE_YN,
		           M_ORDER,
		           M_IN_DATE,
		           M_UP_DATE,
		           M_IN_ID,
		           M_UP_ID,
		           M_DEPTH,
		           (SELECT B.M_PARENT_NO FROM tb_menu B WHERE B.M_NO = A.M_PARENT_NO) AS UP_DEPTH_CODE  
	    FROM tb_menu A  
       JOIN tb_menu_auth MA    
      ON A.m_no = MA.m_no 
       AND MA.ma_visible = 'Y' 
       JOIN tb_menu_auth_group_emp MAGE    
      ON MA.ma_group_seq = MAGE.ma_group_seq
      AND MAGE.em_no =#{login_no}
	    WHERE A.m_depth  = '1'
          AND A.m_order != '1'
          AND A.m_use_yn = 'Y'
      ORDER by A.m_depth , A.m_order
<!--           AND A.m_use_yn = #{m_use_yn} -->
  	</select>
  	
</mapper>
                                    